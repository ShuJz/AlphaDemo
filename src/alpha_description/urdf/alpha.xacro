<?xml version="1.0"?>
<robot name="alpha" xmlns:xacro="http://ros.org/wiki/xacro">
    <!-- Defining the colors used in this robot -->
    <material name="Black">
        <color rgba="0 0 0 1"/>
    </material>

    <material name="White">
        <color rgba="1 1 1 1"/>
    </material>

    <material name="Blue">
        <color rgba="0 0 1 1"/>
    </material>

    <material name="Red">
        <color rgba="1 0 0 1"/>
    </material>

    <!-- Constants -->
    <xacro:property name="M_PI" value="3.14159"/>
    <xacro:property name="left" value="0"/>
    <xacro:property name="right" value="2"/>
    <xacro:property name="back" value="0"/>
    <xacro:property name="front" value="2"/>

    <!-- base link properties -->
    <xacro:property name="base_radius" value="0.5" />
    <xacro:property name="base_len" value="0.05" />

    <!-- motor link properties -->
    <xacro:property name="motor_width" value="0.02" />
    <xacro:property name="motor_len" value="0.05" />

    <!-- wheel link properties -->
    <xacro:property name="wheel_radius" value="0.03" />
    <xacro:property name="wheel_len" value="0.01" />

    <!-- link1 properties -->
    <xacro:property name="link1_width" value="0.03" />
    <xacro:property name="link1_len" value="0.1" />

    <!-- link2 properties -->
    <xacro:property name="link2_width" value="0.03" />
    <xacro:property name="link2_len" value="0.16" />

    <!-- link3 properties -->
    <xacro:property name="link3_width" value="0.03" />
    <xacro:property name="link3_len" value="0.08" />

    <!-- link4 properties -->
    <xacro:property name="link4_width" value="0.025" />
    <xacro:property name="link4_len" value="0.16" />

    <!-- link5 properties -->
    <xacro:property name="link5_width" value="0.03" />
    <xacro:property name="link5_len" value="0.06" />

    <!-- link6 properties -->
    <xacro:property name="link6_width" value="0.04" />
    <xacro:property name="link6_len" value="0.02" />

    <!-- Left gripper -->
    <xacro:property name="left_gripper_len" value="0.08" />
    <xacro:property name="left_gripper_width" value="0.01" />
    <xacro:property name="left_gripper_height" value="0.01" />

    <!-- Right gripper -->
    <xacro:property name="right_gripper_len" value="0.08" />
    <xacro:property name="right_gripper_width" value="0.01" />
    <xacro:property name="right_gripper_height" value="0.01" />

    <!-- camera -->
    <xacro:property name="camera_len" value="0.01" />
    <xacro:property name="camera_width" value="0.03" />
    <xacro:property name="camera_height" value="0.03" />

    <!-- kinect -->
    <xacro:property name="kinect_len" value="0.01" />
    <xacro:property name="kinect_width" value="0.04" />
    <xacro:property name="kinect_height" value="0.03" />

    <!-- laser -->
    
    <xacro:property name="laser_width" value="0.025" />
    <xacro:property name="laser_len" value="0.03" />

    <!-- platform -->
    <xacro:property name="platform_width" value="0.005" />
    <xacro:property name="platform_len" value="0.03" />

    <!-- Gripper frame -->
    <xacro:property name="grasp_frame_radius" value="0.001" />

    <!-- Inertial matrix macro-->
    <!-- Macro for inertia matrix -->
    <xacro:macro name="sphere_inertial_matrix" params="m r">
        <inertial>
            <mass value="${m}" />
            <inertia ixx="${2*m*r*r/5}" ixy="0" ixz="0"
                iyy="${2*m*r*r/5}" iyz="0" 
                izz="${2*m*r*r/5}" />
        </inertial>
    </xacro:macro>

    <xacro:macro name="cylinder_inertial_matrix" params="m r h">
        <inertial>
            <mass value="${m}" />
            <inertia ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
                iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
                izz="${m*r*r/2}" /> 
        </inertial>
    </xacro:macro>

    <xacro:macro name="box_inertial_matrix" params="m w h d">
        <inertial>
            <mass value="${m}" />
            <inertia ixx="${m*(h*h+d*d)/12}" ixy = "0" ixz = "0"
                iyy="${m*(w*w+d*d)/12}" iyz = "0"
                izz="${m*(w*w+h*h)/12}" /> 
        </inertial>
    </xacro:macro>

    <!-- arm link and joint macro -->
    <xacro:macro name="arm_link" params="parent number color link_width link_len z_loc axis_x axis_y axis_z">
        <link name="link_${number}" >
            <visual>
                <origin xyz="0 0 ${link_len/2}" rpy="0 0 0" />
                <geometry>
                    <cylinder radius="${link_width}" length="${link_len}"/>
                </geometry>
                <material name="${color}" />
            </visual>
            <collision>
                <origin xyz="0 0 ${link_len/2}" rpy="0 0 0" />
                <geometry>
                    <cylinder radius="${link_width}" length="${link_len}"/>
                </geometry>
            </collision>
            <xacro:cylinder_inertial_matrix m="1" r="${link_width}" h="${link_len}"/>
        </link>

        <joint name="joint_${number}" type="revolute">
            <parent link="${parent}"/>
            <child link="link_${number}"/>
            <origin xyz="0 0 ${z_loc}" rpy="0 0 0" />
            <axis xyz="${axis_x} ${axis_y} ${axis_z}" />
            <limit effort="300" velocity="10" lower="${-M_PI}" upper="${M_PI}" />
            <dynamics damping="50" friction="1"/>
        </joint>
    </xacro:macro>

    <!-- motor link and joint macro-->
    <!-- loc = 0: left;    loc = 2: right  -->
    <xacro:macro name="motor_link" params="loc color link_width link_len y_loc z_loc">
        <link name="motor_${loc}" >
            <visual>
                <origin xyz="0 0 -${link_width/2}" rpy="0 0 0" />
                <geometry>
                    <box size="${link_width} ${link_len} ${link_width}"/>
                </geometry>
                <material name="${color}" />
            </visual>
            <collision>
                <origin xyz="0 0 -${link_width/2}" rpy="0 0 0" />
                <geometry>
                    <box size="${link_width} ${link_len} ${link_width}"/>
                </geometry>
            </collision>
            <xacro:box_inertial_matrix m="1" w="${link_width}" h="${link_len}" d="${link_width}"/>
        </link>

        <joint name="joint_motor_${loc}" type="fixed">
            <parent link="base_link" />
            <child link="motor_${loc}" />
            <origin xyz="0 ${(loc-1)*y_loc} ${z_loc}" rpy="0 0 0" />
        </joint>
        <gazebo reference="motor_${loc}">
            <material>Gazebo/Black</material>
        </gazebo>
    </xacro:macro>

    <!-- wheel link and joint macro -->
    <xacro:macro name="wheel_link" params="loc color link_width link_len y_loc z_loc">
        <link name="wheel_${loc}" >
            <visual>
                <origin xyz="0 ${(loc-1)*link_len/2} 0" rpy="${M_PI/2} 0 0" />
                <geometry>
                    <cylinder radius="${link_width}" length="${link_len}"/>
                </geometry>
                <material name="${color}" />
            </visual>
            <collision>
                <origin xyz="0 ${(loc-1)*link_len/2} 0" rpy="${M_PI/2} 0 0" />
                <geometry>
                    <cylinder radius="${link_width}" length="${link_len}"/>
                </geometry>
            </collision>
            <xacro:cylinder_inertial_matrix m="1" r="${link_width}" h="${link_len}"/>
        </link>
    </xacro:macro>
    <!-- caster link and joint macro -->
    <xacro:macro name="caster_link" params="loc color link_width x_loc z_loc">
        <link name="caster_${loc}" >
            <visual>
                <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
                <geometry>
                    <sphere radius="${link_width-0.005}" />
                </geometry>
                <material name="${color}" />
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <sphere radius="${link_width-0.005}" />
                </geometry>
            </collision>
            <xacro:sphere_inertial_matrix m="1" r="${link_width}"/>
        </link>

        <joint name="joint_caster_${loc}" type="fixed">
            <parent link="base_link"/>
            <child link="caster_${loc}"/>
            <origin xyz="${(loc-1)*x_loc} 0 ${z_loc}" rpy="0 0 0" />
        </joint>
    </xacro:macro>
    <!-- platform link and joint macro -->
    <xacro:macro name="platform_link" params="loc x_loc">
        <link name="platform_${loc}_link">
            <visual>
                <origin xyz="0 0 ${platform_len*loc/2}"/>
                <geometry>
                    <cylinder radius="${platform_width}" length="${platform_len*loc}"/>
                </geometry>
                <material name="White" />
            </visual>
            <collision>
                <origin xyz="0 0 ${platform_len/2}"/>
                <geometry>
                    <cylinder radius="${platform_width}" length="${platform_len * loc}"/>
                </geometry>
            </collision>
            <xacro:cylinder_inertial_matrix m="1" r="${platform_width}" h="${platform_len}"/>
        </link>

        <joint name="platform_${loc}_joint" type="fixed">
            <parent link="base_link"/>
            <child link="platform_${loc}_link"/>
            <origin xyz="${x_loc} 0 ${wheel_radius+motor_width/2+base_len}" rpy="0 0 0"/>
        </joint>
    </xacro:macro>
    <!-- base_footprint is a fictitious link(frame) that is on the ground right below base_link origin -->
    
    <link name="base_footprint">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <box size="0.001 0.001 0.001" />
            </geometry>
        </visual>
    </link>

    <joint name="base_footprint_joint" type="fixed">
        <origin xyz="0 0 0" rpy="0 0 0" />
        <parent link="base_footprint"/>
        <child link="base_link" />
    </joint>
    
    <!-- base link -->
    <link name="base_link">
        <visual>
            <origin xyz="0 0 ${wheel_radius+motor_width/2+base_len/2}" rpy="0 0 0" />
            <geometry>
                <cylinder radius="${base_radius}" length="${base_len}"/>
            </geometry>
            <material name="White" />
        </visual>
        <collision>
            <origin xyz="0 0 ${wheel_radius+motor_width/2+base_len/2}" rpy="0 0 0" />
            <geometry>
                <cylinder radius="${base_radius}" length="${base_len}"/>
            </geometry>
        </collision>
        <xacro:cylinder_inertial_matrix m="20" r="${base_radius}" h="${base_len}"/>
    </link>
    <!-- platform -->
    <platform_link loc="1" x_loc="${base_radius-0.03}"/>
    <platform_link loc="2" x_loc="${base_radius-0.08}"/>
    <!-- motor link -->
    <motor_link loc="${left}" color="Red" link_width="${motor_width}" link_len="${motor_len}" y_loc="${base_radius-motor_len/2}" z_loc="${wheel_radius+motor_width/2}"/>
    <motor_link loc="${right}" color="Red" link_width="${motor_width}" link_len="${motor_len}" y_loc="${base_radius-motor_len/2}" z_loc="${wheel_radius+motor_width/2}"/>

    <!-- wheel link -->
    <wheel_link loc="${left}" color="Blue" link_width="${wheel_radius}" link_len="${wheel_len}" y_loc="${motor_len/2}" z_loc="${-motor_width/2}"/>
    <wheel_link loc="${right}" color="Blue" link_width="${wheel_radius}" link_len="${wheel_len}" y_loc="${motor_len/2}" z_loc="${-motor_width/2}"/>

    <joint name="base_l_wheel_joint" type="continuous">
        <parent link="motor_0"/>
        <child link="wheel_0"/>
        <origin xyz="0 ${(-1)*motor_len/2} ${-motor_width/2}" rpy="0 0 0" />
        <axis xyz="0 1 0" rpy="0 0 0" />
        <limit effort="100" velocity="100"/>
        <joint_properties damping="0.0" friction="0.0"/>
    </joint>

    <joint name="base_r_wheel_joint" type="continuous">
        <parent link="motor_2"/>
        <child link="wheel_2"/>
        <origin xyz="0 ${motor_len/2} ${-motor_width/2}" rpy="0 0 0" />
        <axis xyz="0 1 0" rpy="0 0 0" />
        <limit effort="100" velocity="100"/>
        <joint_properties damping="0.0" friction="0.0"/>
    </joint>



    <caster_link loc="${back}" color="Red" link_width="${wheel_radius}" x_loc="${base_radius}" z_loc="${wheel_radius}"/>
    <caster_link loc="${front}" color="Red" link_width="${wheel_radius}" x_loc="${base_radius}" z_loc="${wheel_radius}"/>

    <!-- arm link -->
    <arm_link parent="base_link" number="1" color="Red" link_width="${link1_width}" link_len="${link1_len}" z_loc="${wheel_radius+motor_width/2+base_len}" axis_x="0" axis_y="0" axis_z="1"/>
    <arm_link parent="link_1" number="2" color="Blue" link_width="${link2_width}" link_len="${link2_len}" z_loc="${link1_len}" axis_x="0" axis_y="1" axis_z="0"/>
    <arm_link parent="link_2" number="3" color="Black" link_width="${link3_width}" link_len="${link3_len}" z_loc="${link2_len}" axis_x="0" axis_y="1" axis_z="0"/>
    <arm_link parent="link_3" number="4" color="Red" link_width="${link4_width}" link_len="${link4_len}" z_loc="${link3_len}" axis_x="0" axis_y="0" axis_z="1"/>
    <arm_link parent="link_4" number="5" color="Blue" link_width="${link5_width}" link_len="${link5_len}" z_loc="${link4_len}" axis_x="0" axis_y="1" axis_z="0"/>
    <arm_link parent="link_5" number="6" color="Black" link_width="${link6_width}" link_len="${link6_len}" z_loc="${link5_len}" axis_x="0" axis_y="0" axis_z="1"/>


    <!-- Gripper link and joint -->
    <link name="gripper_finger_link1">
        <visual>
            <origin xyz="${left_gripper_len/2} -0.03 0"/>
            <geometry>
                <box size="${left_gripper_len} ${left_gripper_width} ${left_gripper_height}" />
            </geometry>
            <material name="White" />
        </visual>
        <collision>
            <origin xyz="${left_gripper_len/2} -0.03 0"/>
            <geometry>
                <box size="${left_gripper_len} ${left_gripper_width} ${left_gripper_height}" />
            </geometry>
        </collision>
        <xacro:box_inertial_matrix m="1" w="${left_gripper_len}" h="${left_gripper_width}" d="${left_gripper_height}"/>
    </link>

    <link name="gripper_finger_link2">
        <visual>
            <origin xyz="${right_gripper_len/2} 0.03 0"/>
            <geometry>
                <box size="${right_gripper_len} ${right_gripper_width} ${right_gripper_height}" />
            </geometry>
            <material name="White" />
        </visual>
        <collision>
            <origin xyz="${right_gripper_len/2} 0.03 0"/>
            <geometry>
                <box size="${right_gripper_len} ${right_gripper_width} ${right_gripper_height}" />
            </geometry>
        </collision>
        <xacro:box_inertial_matrix m="1" w="${left_gripper_len}" h="${left_gripper_width}" d="${left_gripper_height}"/>
    </link>

    <joint name="finger_joint1" type="prismatic">
        <parent link="link_6"/>
        <child link="gripper_finger_link1"/>
        <origin xyz="0.0 0 ${link6_len}" rpy="${M_PI} ${-M_PI/2} 0"/>
        <axis xyz="0 1 0" />
        <limit effort="100" lower="0" upper="0.05" velocity="1.0"/>
        <dynamics damping="50" friction="1"/>
    </joint>

    <joint name="finger_joint2" type="fixed">
        <parent link="link_6"/>
        <child link="gripper_finger_link2"/>
        <origin xyz="0.0 0 ${link6_len}" rpy="${M_PI} ${-M_PI/2} 0"/>
    </joint>

    <!-- Grasping frame -->
    <link name="grasping_frame"/>

    <joint name="grasping_frame_joint" type="fixed">
      <parent link="link_6"/>
      <child link="grasping_frame"/>
      <origin xyz="0 0 ${link6_len+left_gripper_len}" rpy="${M_PI} ${-M_PI/2} 0"/>
    </joint>
    <!-- //////////////////////////////////// -->
    <!-- ////////////   Sensors  //////////// -->
    <!-- //////////////////////////////////// -->
    <link name="camera_link">
        <visual>
            <origin xyz="0 0 ${camera_height/2}"/>
            <geometry>
                <box size="${camera_len} ${camera_width} ${camera_height}" />
            </geometry>
            <material name="White" />
        </visual>
        <collision>
            <origin xyz="0 0 ${camera_height/2}"/>
            <geometry>
                <box size="${camera_len} ${camera_width} ${camera_height}" />
            </geometry>
        </collision>
        <xacro:box_inertial_matrix m="1" w="${camera_len}" h="${camera_width}" d="${camera_height}"/>
    </link>

    <joint name="camera_joint" type="fixed">
        <parent link="base_link"/>
        <child link="camera_link"/>
        <origin xyz="${base_radius - camera_len} 0 ${wheel_radius+motor_width/2+base_len}" rpy="0 0 0"/>
    </joint>

    <link name="kinect_link">
        <visual>
            <origin xyz="0 0 ${kinect_height/2}"/>
            <geometry>
                <box size="${kinect_len} ${kinect_width} ${kinect_height}" />
            </geometry>
            <material name="White" />
        </visual>
        <collision>
            <origin xyz="0 0 ${kinect_height/2}"/>
            <geometry>
                <box size="${kinect_len} ${kinect_width} ${kinect_height}" />
            </geometry>
        </collision>
        <xacro:box_inertial_matrix m="1" w="${kinect_len}" h="${kinect_width}" d="${kinect_height}"/>
    </link>

    <joint name="kinect_joint" type="fixed">
        <parent link="platform_1_link"/>
        <child link="kinect_link"/>
        <origin xyz="0 0 ${platform_len}" rpy="0 0 0"/>
    </joint>

    <joint name="kinect_optical_joint" type="fixed">
        <origin xyz="0 0 0" rpy="-1.5708 0 -1.5708"/>
        <parent link="kinect_link"/>
        <child link="kinect_frame_optical"/>
    </joint>

    <link name="kinect_frame_optical"/>


    <link name="laser_link">
        <visual>
            <origin xyz="0 0 ${laser_len/2}"/>
            <geometry>
                <cylinder radius="${laser_width}" length="${laser_len}"/>
            </geometry>
            <material name="White" />
        </visual>
        <collision>
            <origin xyz="0 0 ${laser_len/2}"/>
            <geometry>
                <cylinder radius="${laser_width}" length="${laser_len}"/>
            </geometry>
        </collision>
        <xacro:cylinder_inertial_matrix m="1" r="${laser_width}" h="${laser_len}"/>
    </link>

    <joint name="laser_joint" type="fixed">
        <parent link="platform_2_link"/>
        <child link="laser_link"/>
        <origin xyz="0 0 ${platform_len*2}" rpy="0 0 0"/>
    </joint>
    <!-- //////////////////////////////////// -->
    <!-- ////////////   Gazebo   //////////// -->
    <!-- //////////////////////////////////// -->
    <gazebo reference="base_footprint">
        <material>Gazebo/White</material>
        <turnGravityOff>false</turnGravityOff>
    </gazebo>
    <gazebo reference="base_link">
        <material>Gazebo/White</material>
    </gazebo>
    <gazebo reference="link_1">
        <material>Gazebo/Blue</material>
    </gazebo>
    <gazebo reference="link_2">
        <material>Gazebo/White</material>
    </gazebo>
    <gazebo reference="link_3">
        <material>Gazebo/Blue</material>
    </gazebo>
    <gazebo reference="link_4">
        <material>Gazebo/Blue</material>
    </gazebo>
    <gazebo reference="link_5">
        <material>Gazebo/Blue</material>
    </gazebo>
    <gazebo reference="link_6">
        <material>Gazebo/Blue</material>
    </gazebo>
    <gazebo reference="caster_0">
        <material>Gazebo/Red</material>
    </gazebo>
    <gazebo reference="caster_2">
        <material>Gazebo/Red</material>
    </gazebo>
    <gazebo reference="gripper_finger_link1">
        <material>Gazebo/White</material>
    </gazebo>
    <gazebo reference="gripper_finger_link2">
        <material>Gazebo/White</material>
    </gazebo>
    <gazebo reference="camera_link">
        <material>Gazebo/Black</material>
    </gazebo>
    <gazebo reference="kinect_link">
        <material>Gazebo/Red</material>
    </gazebo>
    <gazebo reference="laser_link">
        <material>Gazebo/Blue</material>
    </gazebo>
    <gazebo reference="platform_1_link">
        <material>Gazebo/White</material>
    </gazebo>
    <gazebo reference="platform_2_link">
        <material>Gazebo/White</material>
    </gazebo>
    
    <!-- Transmissions for ROS Control -->
    <xacro:macro name="transmission_block" params="joint_name">
        <transmission name="tran1">
            <type>transmission_interface/SimpleTransmission</type>
            <joint name="${joint_name}">
                <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
            </joint>
            <actuator name="motor1">
                <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
        </transmission>


    </xacro:macro>
    
    <xacro:transmission_block joint_name="joint_1"/>
    <xacro:transmission_block joint_name="joint_2"/>
    <xacro:transmission_block joint_name="joint_3"/>
    <xacro:transmission_block joint_name="joint_4"/>
    <xacro:transmission_block joint_name="joint_5"/>
    <xacro:transmission_block joint_name="joint_6"/>
    <xacro:transmission_block joint_name="finger_joint1"/>

    <transmission name="base_r_wheel_joint_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="base_r_wheel_joint">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
        <actuator name="motor_act_2">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>

    <transmission name="base_l_wheel_joint_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="base_l_wheel_joint">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
        <actuator name="motor_act_0">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>

    <!-- Sensors plugin -->
    <gazebo reference="camera_link">
        <sensor type="camera" name="camera_node">
            <update_rate>30.0</update_rate>
            <camera name="head">
                <horizontal_fov>1.3962634</horizontal_fov>
                <image>
                    <width>1280</width>
                    <height>720</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.02</near>
                    <far>300</far>
                </clip>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                </noise>
            </camera>
            <plugin name="gazebo_camera" filename="libgazebo_ros_camera.so">
                <alwaysOn>true</alwaysOn>
                <updateRate>0.0</updateRate>
                <cameraName>/camera</cameraName>
                <imageTopicName>image_raw_camera</imageTopicName>
                <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                <frameName>camera_link</frameName>
                <hackBaseline>0.07</hackBaseline>
                <distortionK1>0.0</distortionK1>
                <distortionK2>0.0</distortionK2>
                <distortionK3>0.0</distortionK3>
                <distortionT1>0.0</distortionT1>
                <distortionT2>0.0</distortionT2>
            </plugin>
        </sensor>
    </gazebo>

    <gazebo reference="laser_link">
        <sensor type="ray" name="rplidar">
            <pose>0 0 0 0 0 0</pose>
            <visualize>false</visualize>
            <update_rate>5.5</update_rate>
            <ray>
                <scan>
                  <horizontal>
                    <samples>360</samples>
                    <resolution>1</resolution>
                    <min_angle>-3</min_angle>
                    <max_angle>3</max_angle>
                  </horizontal>
                </scan>
                <range>
                  <min>0.10</min>
                  <max>6.0</max>
                  <resolution>0.01</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                  <mean>0.0</mean>
                  <stddev>0.01</stddev>
                </noise>
            </ray>
            <plugin name="gazebo_rplidar" filename="libgazebo_ros_laser.so">
                <topicName>/scan</topicName>
                <frameName>laser_link</frameName>
            </plugin>
        </sensor>
    </gazebo>

    <gazebo reference="kinect_link">
        <sensor type="depth" name="camera">
            <always_on>true</always_on>
            <update_rate>20.0</update_rate>
            <camera>
                <horizontal_fov>${60.0*M_PI/180.0}</horizontal_fov>
                <image>
                    <format>R8G8B8</format>
                    <width>640</width>
                    <height>480</height>
                </image>
                <clip>
                    <near>0.05</near>
                    <far>8.0</far>
                </clip>
            </camera>
            <plugin name="kinect_camare_controller" filename="libgazebo_ros_openni_kinect.so">
                <cameraName>kinect</cameraName>
                <alwaysOn>true</alwaysOn>
                <updateRate>10</updateRate>
                <imageTopicName>rgb/image_raw</imageTopicName>
                <depthImageTopicName>depth/image_raw_kinect</depthImageTopicName>
                <pointCloudTopicName>depth/points</pointCloudTopicName>
                <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
                <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
                <frameName>kinect_frame_optical</frameName>
                <baseline>0.1</baseline>
                <distortion_k1>0.0</distortion_k1>
                <distortion_k2>0.0</distortion_k2>
                <distortion_k3>0.0</distortion_k3>
                <distortion_t1>0.0</distortion_t1>
                <distortion_t2>0.0</distortion_t2>
                <pointCloudCutoff>0.4</pointCloudCutoff>
            </plugin>
        </sensor>
    </gazebo>


    <!-- ros_control plugin -->
    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>/alpha_arm</robotNamespace> 
            <robotBaseFrame>base_footprint</robotBaseFrame>
        </plugin>
    </gazebo> 
   

    <gazebo>
        <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
            <rosDebugLevel>Debug</rosDebugLevel>
            <publishWheelTF>true</publishWheelTF>
            <robotNamespace>/alpha_wheel</robotNamespace>
            <publishTf>1</publishTf>
            <publishWheelJointState>true</publishWheelJointState>
            <alwaysOn>true</alwaysOn>
            <updateRate>50.0</updateRate>
            <legacyMode>true</legacyMode>
            <leftJoint>base_l_wheel_joint</leftJoint>
            <rightJoint>base_r_wheel_joint</rightJoint>
            <wheelSeparation>${base_radius*2}</wheelSeparation>
            <wheelDiameter>${2*wheel_radius}</wheelDiameter>
            <broadcastTF>1</broadcastTF>
            <wheelTorque>300</wheelTorque>
            <wheelAcceleration>18</wheelAcceleration>
            <commandTopic>cmd_vel</commandTopic>
            <odometryFrame>odom</odometryFrame> 
            <odometryTopic>odom</odometryTopic> 
            <robotBaseFrame>base_footprint</robotBaseFrame>
        </plugin>
    </gazebo>

</robot>